# Server Configuration
server.port=${PORT:8081}

# Database Configuration - Uses environment variables with MySQL fallback for local dev
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/roots?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:root}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:Nishu@123}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER:com.mysql.cj.jdbc.Driver}

# JPA/Hibernate Configuration - Dynamic based on database
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=${HIBERNATE_DIALECT:org.hibernate.dialect.MySQL8Dialect}
spring.jpa.database-platform=${HIBERNATE_DIALECT:org.hibernate.dialect.MySQL8Dialect}

# File upload configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Logging Configuration
logging.level.com.eduprajna=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Cloudinary Configuration - Uses environment variables for sensitive data
# replace the placeholders with your values
$env:CLOUDINARY_URL = 'cloudinary://617656758894993:WdEtdM3yiiwzhZl2BqPurGSDefE@dnwrpzvbz'
$env:CLOUDINARY_CLOUD_NAME = 'dnwrpzvbz'
$env:CLOUDINARY_API_KEY   = '617656758894993'
$env:CLOUDINARY_API_SECRET= 'WdEtdM3yiiwzhZl2BqPurGSDefE'
